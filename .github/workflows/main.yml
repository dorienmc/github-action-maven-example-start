name: Maven CI/CD

on:
 push:
  branches: [ master ]
 pull_request:
  branches: [ master ]

jobs:
 build-and-test:

  runs-on: ubuntu-latest
  
  services:
   redis:
    image: redis
    options: >-
     --health-cmd "redis-cli ping"
     --health-interval 10s
     --health-timeout 5s
     --health-retries 5
    ports:
     - 6379:6379

  steps:
   - uses: actions/checkout@v2
   - name: Set up JDK 14
     uses: actions/setup-java@v1
     with:
      java-version: 14
   
   - name: Cache the macne packages to speed up building
     uses: actions/cache@v1
     with:
      path: ~/.m2
      key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      restore-keys: ${{ runner.os }}-m2

   - name: Build project with Maven
     run: mvn -B package --file pom.xml

 publish-job:
  runs-on: ubuntu-latest
  needs: [build-and-test]
  steps:
   - uses: actions/checkout@v2
   - name: Set up JDK 14
     uses: actions/setup-java@v1
     with:
      java-version: 14
   - run: mvn -B package --file pom.xml -DskipTests
   - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
   - uses: actions/upload-artifact@v1
     with:
      name: Package
      path: staging
      
 build-docker-image:
  name: Publish to docker hub
  runs-on: ubuntu-latest
  needs: [build-and-test]
  
  steps:
   - uses: actions/checkout@v2
   - run: echo ${{ secrets.DOCKER_REPO }}
   - name: Login to Docker Hub
     run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username dorienmc --password-stdin 
   - name: Build container image
     run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
   - name: Publish docker image
     run: docker push ${{ secrets.DOCKER_REPO }}
  
